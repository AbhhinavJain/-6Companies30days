Q - https://leetcode.com/problems/maximum-compatibility-score-sum/description/

class Solution {
public:
    int solve(vector<vector<int>>&s,vector<vector<int>>&m,int i,vector<int>&a){
        if(i>=s.size()){
            if(a.size()!=s.size())return 0;
            int t = 0;
            for(int j=0;j<s.size();++j){
                for(int k=0;k<s[j].size();++k){
                    t += (s[j][k]==m[a[j]][k]);
                }
            }
            return t;
        }
        int ans = 0;
        for(int j=0;j<s.size();++j){
            bool f = 1;
            for(auto x:a){
                if(x==j){f=0;break;}
            }
            if(f){
                a.push_back(j);
                ans = max(ans,solve(s,m,i+1,a));
                a.pop_back();
            }
        }
        return ans;
    }
    int maxCompatibilitySum(vector<vector<int>>& students, vector<vector<int>>& mentors) {
        vector<int> a;
        return solve(students,mentors,0,a);
    }
};
Q - https://leetcode.com/problems/k-divisible-elements-subarrays/description/

class Solution {
public:
    int countDistinct(vector<int>& nums, int k, int p) {
        map<vector<int>,int>m;
        for(int i=0;i<nums.size();++i){
            int t = 0;
            vector<int> a;
            for(int j=i;j<nums.size();++j){
                if(nums[j]%p==0){
                    t += 1;
                }
                if(k>=t){
                    a.push_back(nums[j]);
                    m[a]+=1;
                }
                else break;
            }
        } 
        return m.size();
    }
};